{"version":3,"file":"static/js/473.74493c86.chunk.js","mappings":"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","sources":["views/dashboard/school/School.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport '../style.css'\r\nimport {\r\n  CAvatar,\r\n  CButton,\r\n  CButtonGroup,\r\n  CCard,\r\n  CCardBody,\r\n  CCardFooter,\r\n  CCardHeader,\r\n  CCol,\r\n  CProgress,\r\n  CRow,\r\n  CForm,\r\n  CFormLabel,\r\n  CFormInput,\r\n  CModal,\r\n  CModalHeader,\r\n  CModalBody,\r\n  CModalContent,\r\n  CModalTitle,\r\n  CModalFooter,\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from \"@coreui/react\";\r\nimport { CSmartTable } from \"@coreui/react-pro\";\r\nimport { CChartLine } from \"@coreui/react-chartjs\";\r\nimport { getStyle, hexToRgba } from \"@coreui/utils\";\r\nimport CIcon from \"@coreui/icons-react\";\r\nimport {\r\n  cibCcAmex,\r\n  cibCcApplePay,\r\n  cibCcMastercard,\r\n  cibCcPaypal,\r\n  cibCcStripe,\r\n  cibCcVisa,\r\n  cibGoogle,\r\n  cibFacebook,\r\n  cibLinkedin,\r\n  cifBr,\r\n  cifEs,\r\n  cifFr,\r\n  cifIn,\r\n  cifPl,\r\n  cifUs,\r\n  cibTwitter,\r\n  cilCloudDownload,\r\n  cilPeople,\r\n  cilUser,\r\n  cilUserFemale,\r\n} from \"@coreui/icons\";\r\n\r\nconst School = (props) => {\r\n  //object working as style prop in the school items of the table\r\n  const stylerObj = { color: \"primary\", align: \"middle\" };\r\n\r\n  //all useStates\r\n  const [schoolKey, setSchoolKey] = useState(1);\r\n  const [schoolName, setSchoolName] = useState(\"\");\r\n  const [schoolAddress, setSchoolAddress] = useState(\"\");\r\n  const [schoolBoard, setSchoolBoard] = useState(\"\");\r\n  const [loading, setLoading] = useState();\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  //all useEffects\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    /*fetch('https://apitest.coreui.io/fake_data/users.json',{mode:'cors'})\r\n      .then((response) => {console.log(\"here\");response.json()})\r\n      .then((result) => {\r\n        console.log(\"result\",result)\r\n        \r\n      })*/\r\n    //setInfoArr(infoArr)\r\n    setLoading(false);\r\n  });\r\n\r\n  //all functions\r\n\r\n  //Constructor function to construct school object\r\n  function ConstructSchool(schoolName, schoolAddress, schoolBoard) {\r\n    this.schoolName = schoolName;\r\n    this.schoolAddress = schoolAddress;\r\n    this.schoolBoard = schoolBoard;\r\n    this.schoolKey = schoolKey;\r\n    this._props = stylerObj;\r\n    setSchoolKey(schoolKey + 1);\r\n  }\r\n\r\n  //function to extract school details using state of input components in add school details modal form\r\n  const extractSchoolData = (event) => {\r\n    if (event.target.id === \"schoolName\") {\r\n      setSchoolName(event.target.value);\r\n    } else if (event.target.id === \"schoolAddress\") {\r\n      setSchoolAddress(event.target.value);\r\n    } else {\r\n      setSchoolBoard(event.target.value);\r\n    }\r\n  };\r\n\r\n  //function to add created school object into the school array\r\n  const submitSchoolData = () => {\r\n    let obj = new ConstructSchool(schoolName, schoolAddress, schoolBoard);\r\n    props.updateSchoolArr(obj);\r\n    setSchoolName(\"\");\r\n    setSchoolAddress(\"\");\r\n    setSchoolBoard(\"\");\r\n  };\r\n\r\n  //function triggered when submit button is clicked on add school details modal form\r\n  const clickHandler = () => {\r\n    submitSchoolData();\r\n    setVisible(false);\r\n  };\r\n\r\n  //array of details of column headings of the table\r\n  const columns = [\r\n    {\r\n      key: \"schoolName\",\r\n      _style: { width: \"10px\" },\r\n      _props: { color: \"dark\", className: \"fw-semibold\", rounded: true },\r\n    },\r\n    {\r\n      key: \"schoolAddress\",\r\n      _style: { width: \"15px\" },\r\n      _props: { color: \"dark\", className: \"fw-semibold\" },\r\n    },\r\n\r\n    {\r\n      key: \"schoolBoard\",\r\n      _style: { width: \"10px\" },\r\n      _props: { color: \"dark\", className: \"fw-semibold\" },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <div className=\"table-container\">\r\n        <CButton color=\"dark\" className=\"my-3\" onClick={() => setVisible(true)}>\r\n          Add School\r\n        </CButton>\r\n        <CModal visible={visible} /*onClose={(e) => setVisible(false)}*/>\r\n          <CModalHeader>\r\n            <CModalTitle>Fill School Details</CModalTitle>\r\n          </CModalHeader>\r\n          <CModalBody>\r\n            <CForm>\r\n              <div className=\"my-4\">\r\n                <CFormLabel htmlFor=\"schoolName\">Name</CFormLabel>\r\n                <CFormInput\r\n                  onChange={extractSchoolData}\r\n                  type=\"text\"\r\n                  id=\"schoolName\"\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <CFormLabel htmlFor=\"schoolAddress\">Address</CFormLabel>\r\n                <CFormInput\r\n                  onChange={extractSchoolData}\r\n                  type=\"text\"\r\n                  id=\"schoolAddress\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"my-4\">\r\n                <CFormLabel htmlFor=\"schoolBoard\">Board</CFormLabel>\r\n                <CFormInput\r\n                  onChange={extractSchoolData}\r\n                  type=\"text\"\r\n                  id=\"schoolBoard\"\r\n                />\r\n              </div>\r\n            </CForm>\r\n          </CModalBody>\r\n          <CModalFooter>\r\n            <CButton size=\"lg\" color=\"success\" onClick={clickHandler}>\r\n              Save\r\n            </CButton>\r\n            <CButton\r\n              size=\"lg\"\r\n              color=\"dark\"\r\n              onClick={() => {\r\n                setVisible(false);\r\n              }}\r\n            >\r\n              Close\r\n            </CButton>\r\n          </CModalFooter>\r\n        </CModal>\r\n\r\n        <CSmartTable\r\n          columns={columns}\r\n          columnSorter\r\n          footer\r\n          items={props.schoolArr}\r\n          itemsPerPage={5}\r\n          itemsPerPageSelect\r\n          loading={loading}\r\n          pagination\r\n          tableProps={{\r\n            hover: true,\r\n            responsive: true,\r\n          }}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default School;\r\n"],"names":["props","stylerObj","color","align","_useState","useState","_useState2","_slicedToArray","schoolKey","setSchoolKey","_useState3","_useState4","schoolName","setSchoolName","_useState5","_useState6","schoolAddress","setSchoolAddress","_useState7","_useState8","schoolBoard","setSchoolBoard","_useState9","_useState10","loading","setLoading","_useState11","_useState12","visible","setVisible","ConstructSchool","this","_props","useEffect","extractSchoolData","event","target","id","value","_jsx","_Fragment","children","_jsxs","className","CButton","onClick","CModal","CModalHeader","CModalTitle","CModalBody","CForm","CFormLabel","htmlFor","CFormInput","onChange","type","CModalFooter","size","obj","updateSchoolArr","submitSchoolData","CSmartTable","columns","key","_style","width","rounded","columnSorter","footer","items","schoolArr","itemsPerPage","itemsPerPageSelect","pagination","tableProps","hover","responsive"],"sourceRoot":""}