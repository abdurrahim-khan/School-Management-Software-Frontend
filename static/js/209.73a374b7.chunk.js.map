{"version":3,"file":"static/js/209.73a374b7.chunk.js","mappings":"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","sources":["views/dashboard/student/Student.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport '../style.css'\r\nimport {\r\n  CAvatar,\r\n  CButton,\r\n  CButtonGroup,\r\n  CCard,\r\n  CCardBody,\r\n  CCardFooter,\r\n  CCardHeader,\r\n  CCol,\r\n  CProgress,\r\n  CRow,\r\n  CForm,\r\n  CFormInput,\r\n  CFormLabel,\r\n  CFormCheck,\r\n  CModal,\r\n  CModalHeader,\r\n  CModalBody,\r\n  CModalContent,\r\n  CModalTitle,\r\n  CModalFooter,\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n  CFormSelect,\r\n} from \"@coreui/react\";\r\nimport { CSmartTable, CMultiSelect } from \"@coreui/react-pro\";\r\nimport Select from \"react-select\";\r\nimport { CChartLine } from \"@coreui/react-chartjs\";\r\nimport { getStyle, hexToRgba } from \"@coreui/utils\";\r\nimport CIcon from \"@coreui/icons-react\";\r\nimport {\r\n  cibCcAmex,\r\n  cibCcApplePay,\r\n  cibCcMastercard,\r\n  cibCcPaypal,\r\n  cibCcStripe,\r\n  cibCcVisa,\r\n  cibGoogle,\r\n  cibFacebook,\r\n  cibLinkedin,\r\n  cifBr,\r\n  cifEs,\r\n  cifFr,\r\n  cifIn,\r\n  cifPl,\r\n  cifUs,\r\n  cibTwitter,\r\n  cilCloudDownload,\r\n  cilPeople,\r\n  cilUser,\r\n  cilUserFemale,\r\n} from \"@coreui/icons\";\r\n\r\n//student components begins\r\nconst Student = (props) => {\r\n  //first item objects in the filter dropdowns\r\n  const noSchoolFilterObj = {\r\n    value: \"No Filter\",\r\n    label: \"No Filter\",\r\n  };\r\n  const noClassFilterObj = {\r\n    value: \"No Filter\",\r\n    label: \"No Filter\",\r\n  };\r\n\r\n  //first item objects in the select dropdowns in add student modal form\r\n  const noSchoolSelectedObj = {\r\n    value: \"No School Selected\",\r\n    label: \"No School Selected\",\r\n    disabled: true,\r\n  };\r\n  const noClassSelectedObj = {\r\n    value: \"No Class Selected\",\r\n    label: \"No Class Selected\",\r\n  };\r\n\r\n  //all useStates\r\n  const [studentKey, setStudentKey] = useState(1);\r\n  const [studentName, setStudentName] = useState(\"\");\r\n  const [studentRoll, setStudentRoll] = useState(\"\");\r\n  const [studentClass, setStudentClass] = useState(noClassSelectedObj);\r\n  const [studentAge, setStudentAge] = useState(\"\");\r\n  const [studentSchool, setStudentSchool] = useState(noSchoolSelectedObj);\r\n  const [selectedSchoolOptions, setSelectedSchoolOptions] =\r\n    useState(noSchoolFilterObj);\r\n  const [selectedClassOptions, setSelectedClassOptions] =\r\n    useState(noClassFilterObj);\r\n  const [loading, setLoading] = useState();\r\n  const [visible, setVisible] = useState(false);\r\n  const [tempArr, setTempArr] = useState([...props.studentArr]);\r\n  const stylerObj = {\r\n    color: \"primary\",\r\n    className: \"fw-semibold\",\r\n    rounded: true,\r\n  };\r\n\r\n  // all useEffects\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    //used when fetching data from server to populate the table\r\n\r\n    /*fetch('https://apitest.coreui.io/fake_data/users.json',{mode:'cors'})\r\n      .then((response) => {console.log(\"here\");response.json()})\r\n      .then((result) => {\r\n        console.log(\"result\",result)\r\n      })*/\r\n    setLoading(false);\r\n  });\r\n\r\n  useEffect(() => {\r\n    setTempArr([...props.studentArr]);\r\n  }, [props.studentArr]);\r\n\r\n  useEffect(() => {\r\n    setTempArr(\r\n      selectedSchoolOptions.value === \"No Filter\"\r\n        ? props.studentArr\r\n        : selectedClassOptions.value == \"No Filter\"\r\n        ? props.studentArr.filter((element) => {\r\n            return element.studentSchool === selectedSchoolOptions.value;\r\n          })\r\n        : props.studentArr.filter((element) => {\r\n            return (\r\n              element.studentSchool === selectedSchoolOptions.value &&\r\n              element.studentClass === selectedClassOptions.value\r\n            );\r\n          })\r\n    );\r\n  }, [selectedSchoolOptions, selectedClassOptions]);\r\n\r\n  useEffect(() => {\r\n    setSelectedClassOptions(noClassFilterObj);\r\n  }, [selectedSchoolOptions]);\r\n\r\n  //Constructor function to create student objects\r\n  function ConstructStudent(\r\n    studentName,\r\n    studentAge,\r\n    studentRoll,\r\n    studentClass,\r\n    studentSchool\r\n  ) {\r\n    this.studentName = studentName;\r\n    this.studentAge = studentAge;\r\n    this.studentRoll = studentRoll;\r\n    this.studentClass = studentClass;\r\n    this.studentSchool = studentSchool;\r\n    this.studentKey = studentKey;\r\n    this._props = stylerObj;\r\n    setStudentKey(studentKey + 1);\r\n  }\r\n\r\n  // function to extract data based on state from the add student details modal form\r\n  const extractStudentData = (event) => {\r\n    if (event.target.id === \"studentName\") {\r\n      setStudentName(event.target.value);\r\n    } else if (event.target.id === \"studentAge\") {\r\n      setStudentAge(event.target.value);\r\n    } else if (event.target.id === \"studentClass\") {\r\n      setStudentClass(event.target.value);\r\n    } else if (event.target.id === \"studentRoll\") {\r\n      setStudentRoll(event.target.value);\r\n    } else {\r\n      setStudentSchool(event.target.value);\r\n    }\r\n  };\r\n\r\n  //function to add the created student object into the student array\r\n  const submitStudentData = () => {\r\n    let obj = new ConstructStudent(\r\n      studentName,\r\n      studentAge,\r\n      studentRoll,\r\n      studentClass.value,\r\n      studentSchool.value\r\n    );\r\n    props.updateStudentArr(obj);\r\n    setStudentName(\"\");\r\n    setStudentAge(\"\");\r\n    setStudentRoll(\"\");\r\n    setStudentClass(noClassSelectedObj);\r\n    setStudentSchool(noSchoolSelectedObj);\r\n    setSelectedSchoolOptions(noSchoolFilterObj);\r\n    setSelectedClassOptions(noClassFilterObj);\r\n  };\r\n\r\n  //function triggered by clicking submit button in add student details modal form\r\n  const clickHandler = () => {\r\n    submitStudentData();\r\n    setVisible(false);\r\n  };\r\n\r\n  // Functions triggered on selection\r\n  //for filters\r\n  function handleSchoolSelectFilter(data) {\r\n    setSelectedSchoolOptions(data);\r\n  }\r\n  function handleClassSelectFilter(data) {\r\n    setSelectedClassOptions(data);\r\n  }\r\n  //for select dropdown in modal form\r\n  function handleSelectSchool(data) {\r\n    setStudentSchool(data);\r\n  }\r\n  function handleSelectClass(data) {\r\n    setStudentClass(data);\r\n  }\r\n\r\n  //column headings in table\r\n  const columns = [\r\n    {\r\n      key: \"studentName\",\r\n      _style: { width: \"10px\" },\r\n      _props: { color: \"dark\", className: \"fw-semibold\", rounded: true },\r\n    },\r\n    {\r\n      key: \"studentAge\",\r\n      _style: { width: \"15px\" },\r\n      _props: { color: \"dark\", className: \"fw-semibold\", rounded: true },\r\n    },\r\n    {\r\n      key: \"studentRoll\",\r\n      _style: { width: \"10px\" },\r\n      _props: { color: \"dark\", className: \"fw-semibold\", rounded: true },\r\n    },\r\n    {\r\n      key: \"studentClass\",\r\n      _style: { width: \"10px\" },\r\n      _props: { color: \"dark\", className: \"fw-semibold\", rounded: true },\r\n    },\r\n    {\r\n      key: \"studentSchool\",\r\n      _style: { width: \"10px\" },\r\n      _props: { color: \"dark\", className: \"fw-semibold\", rounded: true },\r\n    },\r\n  ];\r\n\r\n  // Array of all school options\r\n  const schoolList = props.schoolArr.map((element) => {\r\n    return {\r\n      value: element.schoolName,\r\n      label: element.schoolName,\r\n    };\r\n  });\r\n\r\n  // array of all class options\r\n  const classList = [\r\n    {\r\n      value: \"1\",\r\n      label: \"Grade 1\",\r\n    },\r\n    {\r\n      value: \"2\",\r\n      label: \"Grade 2\",\r\n    },\r\n    {\r\n      value: \"3\",\r\n      label: \"Grade 3\",\r\n    },\r\n    {\r\n      value: \"4\",\r\n      label: \"Grade 4\",\r\n    },\r\n    {\r\n      value: \"5\",\r\n      label: \"Grade 5\",\r\n    },\r\n    {\r\n      value: \"6\",\r\n      label: \"Grade 6\",\r\n    },\r\n    {\r\n      value: \"7\",\r\n      label: \"Grade 7\",\r\n    },\r\n    {\r\n      value: \"8\",\r\n      label: \"Grade 8\",\r\n    },\r\n    {\r\n      value: \"9\",\r\n      label: \"Grade 9\",\r\n    },\r\n    {\r\n      value: \"10\",\r\n      label: \"Grade 10\",\r\n    },\r\n    {\r\n      value: \"11\",\r\n      label: \"Grade 11\",\r\n    },\r\n    {\r\n      value: \"12\",\r\n      label: \"Grade 12\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <div className=\"d-flex justify-content-between align-items-center\">\r\n        <div>\r\n          <CButton\r\n            color=\"dark\"\r\n            className=\"my-3\"\r\n            onClick={() => setVisible(true)}\r\n          >\r\n            Add Student\r\n          </CButton>\r\n        </div>\r\n        <div\r\n          className=\"d-flex justify-content-end align-items-center gap-3\"\r\n          style={{ width: \"60%\" }}\r\n        >\r\n          <div style={{ width: \"50%\" }}>\r\n            <Select\r\n              size=\"lg\"\r\n              options={[noSchoolFilterObj, ...schoolList]}\r\n              placeholder=\"Select School\"\r\n              value={selectedSchoolOptions}\r\n              onChange={handleSchoolSelectFilter}\r\n              isSearchable={true}\r\n              virtualScroller={true}\r\n            />\r\n          </div>\r\n          {selectedSchoolOptions.value !== \"No Filter\" ? (\r\n            <div style={{ width: \"50%\" }}>\r\n              <Select\r\n                size=\"lg\"\r\n                options={[noClassFilterObj, ...classList]}\r\n                placeholder=\"Select Class\"\r\n                value={selectedClassOptions}\r\n                onChange={handleClassSelectFilter}\r\n                isSearchable={true}\r\n                virtualScroller={true}\r\n              />\r\n            </div>\r\n          ) : undefined}\r\n        </div>\r\n      </div>\r\n\r\n      <CModal visible={visible} /*onClose={() => setVisible(false)}*/>\r\n        <CModalHeader>\r\n          <CModalTitle>Fill Student Details</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n          <CForm>\r\n            <div className=\"mt-0 mb-4\">\r\n              <CFormLabel htmlFor=\"studentName\">Name</CFormLabel>\r\n              <CFormInput\r\n                onChange={extractStudentData}\r\n                type=\"text\"\r\n                id=\"studentName\"\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <CFormLabel htmlFor=\"studentRoll\">Roll No</CFormLabel>\r\n              <CFormInput\r\n                onChange={extractStudentData}\r\n                type=\"text\"\r\n                id=\"studentRoll\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"my-4\">\r\n              <CFormLabel htmlFor=\"studentAge\">Age</CFormLabel>\r\n              <CFormInput\r\n                onChange={extractStudentData}\r\n                type=\"number\"\r\n                id=\"studentAge\"\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <CFormLabel htmlFor=\"studentClass\">Class</CFormLabel>\r\n              <Select\r\n                size=\"lg\"\r\n                options={[noClassSelectedObj, ...classList]}\r\n                placeholder=\"Select Class\"\r\n                value={studentClass}\r\n                onChange={handleSelectClass}\r\n                isSearchable={true}\r\n                virtualScroller={true}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"mt-4\">\r\n              <CFormLabel htmlFor=\"studentSchool\">School</CFormLabel>\r\n              <Select\r\n                size=\"lg\"\r\n                options={[noSchoolSelectedObj, ...schoolList]}\r\n                placeholder=\"Select School\"\r\n                value={studentSchool}\r\n                onChange={handleSelectSchool}\r\n                isSearchable={true}\r\n                virtualScroller={true}\r\n              />\r\n            </div>\r\n          </CForm>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton size=\"lg\" color=\"success\" onClick={clickHandler}>\r\n            Save\r\n          </CButton>\r\n          <CButton\r\n            size=\"lg\"\r\n            color=\"dark\"\r\n            onClick={() => {\r\n              setVisible(false);\r\n            }}\r\n          >\r\n            Close\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n      <CSmartTable\r\n        color=\"primary\"\r\n        columns={columns}\r\n        columnSorter\r\n        footer\r\n        items={tempArr}\r\n        itemsPerPage={5}\r\n        itemsPerPageSelect\r\n        loading={loading}\r\n        pagination\r\n        tableProps={{\r\n          hover: true,\r\n          responsive: true,\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default Student;\r\n"],"names":["props","noSchoolFilterObj","value","label","noClassFilterObj","noSchoolSelectedObj","disabled","noClassSelectedObj","_useState","useState","_useState2","_slicedToArray","studentKey","setStudentKey","_useState3","_useState4","studentName","setStudentName","_useState5","_useState6","studentRoll","setStudentRoll","_useState7","_useState8","studentClass","setStudentClass","_useState9","_useState10","studentAge","setStudentAge","_useState11","_useState12","studentSchool","setStudentSchool","_useState13","_useState14","selectedSchoolOptions","setSelectedSchoolOptions","_useState15","_useState16","selectedClassOptions","setSelectedClassOptions","_useState17","_useState18","loading","setLoading","_useState19","_useState20","visible","setVisible","_useState21","_toConsumableArray","studentArr","_useState22","tempArr","setTempArr","stylerObj","color","className","rounded","ConstructStudent","this","_props","useEffect","filter","element","extractStudentData","event","target","id","schoolList","schoolArr","map","schoolName","classList","_jsxs","_Fragment","children","_jsx","CButton","onClick","style","width","Select","size","options","concat","placeholder","onChange","data","isSearchable","virtualScroller","undefined","CModal","CModalHeader","CModalTitle","CModalBody","CForm","CFormLabel","htmlFor","CFormInput","type","CModalFooter","obj","updateStudentArr","submitStudentData","CSmartTable","columns","key","_style","columnSorter","footer","items","itemsPerPage","itemsPerPageSelect","pagination","tableProps","hover","responsive"],"sourceRoot":""}